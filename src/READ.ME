##Описание:


Программа умеет:
1. Создавать новые задачи, эпики, подзадачи.
2. Перезаписывать задачи, эпики, подзадачи.
3. Удалять задачи, подзадачи, эпики по id.
4. Удалять все задачи, эпики, подзадачи.
5. Хранить задачи, эпики, подзадачи.
6. Менять статус задач, эпиков, подзадач: NEW, DONE, IN_PROGRESS, при обновлении подзадач и задач.
Статус эпика меняется только при обновлении его подзадач.
7. Получать список всех подзадач эпика по id.
8. Управление статусами осуществляется по следующему правилу:
    a. Менеджер сам не выбирает статус для задачи. Информация о нём приходит менеджеру вместе с информацией о самой задаче. По этим данным в одних случаях он будет сохранять статус, в других будет рассчитывать.
    b. Для эпиков:
   если у эпика нет подзадач или все они имеют статус NEW, то статус должен быть NEW.
   если все подзадачи имеют статус DONE, то и эпик считается завершённым — со статусом DONE.
   во всех остальных случаях статус должен быть IN_PROGRESS.

UPD 28.08
1. Добавлены методы удаления по id и удаления всех подзадач.
2. Доработана логика изменения статуса у эпика при обновлении подзадачи.
3. Подзадачи у эпика хранятся в виде списка с id подзадач.
4. Добавлен метод обновления задачи.
5. Доработана логика обновления эпика. Добавлена проверка статуса на этом этапе.
6. Доработана логика удаления эпика - при удалении эпика по id удаляются все его текущие подзадачи.
7. Добавлена проверка при создании позадачи на существование эпика.

UPD 29.08
Обсудили на вебинаре, что всё-таки статус будет передаваться, поэтому переделала под эту логику.
Оказывается не все новые задачи будут NEW.
1. Переделала логику создания задач, подзадач, эпиков. Так как изначально делала не верно, теперь статус для задач и подзадач мы принимаем
из конструктора.
2. Добавила установку статуса через гет в конструктор.

UPD 31.08
1. Добавлены недостающие сеттеры.
2. Для задач, если не указан статус при создании будет устанавливаться NEW.
3. Внесены все правки из комментариев.

UPD 14.09
1. Добавлены интерфейсы.
2. Задачи теперь сохраняются в историю.
3. Программа покрыта тестами.